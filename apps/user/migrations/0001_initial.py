# Generated by Django 3.2 on 2022-02-17 05:01

import apps.user.managers
import apps.user.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='criado em')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modificado em')),
                ('name', models.CharField(max_length=100, verbose_name='nome completo')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('email_alternate', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email alternativo')),
                ('document', models.CharField(max_length=14, null=True, unique=True, verbose_name='documento')),
                ('cellphone', models.CharField(max_length=16, null=True, verbose_name='celular')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='telefone')),
                ('type', models.CharField(choices=[('executive', 'Executive'), ('technical', 'Técnico'), ('academic', 'Academic')], default='technical', max_length=14, verbose_name='tipo')),
                ('is_brazilian', models.BooleanField(null=True, verbose_name='brasileiro?')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('picture', models.ImageField(blank=True, null=True, upload_to=apps.user.models.user_picture_bucket, verbose_name='profile picture')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', apps.user.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicUser',
            fields=[
            ],
            options={
                'verbose_name': 'usuário acadêmico',
                'verbose_name_plural': 'usuários acadêmicos',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', apps.user.managers.AcademicUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ExecutiveUser',
            fields=[
            ],
            options={
                'verbose_name': 'usuário executivo',
                'verbose_name_plural': 'usuários executivos',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', apps.user.managers.ExecutiveUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalUser',
            fields=[
            ],
            options={
                'verbose_name': 'usuário técnico',
                'verbose_name_plural': 'usuários técnicos',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', apps.user.managers.TechnicalUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='criado em')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modificado em')),
                ('department', models.CharField(blank=True, max_length=254, null=True, verbose_name='departamento/Seção')),
                ('coordination', models.CharField(blank=True, max_length=254, null=True, verbose_name='coordenação/Gerência')),
                ('role', models.CharField(max_length=254, null=True, verbose_name='cargo/Função')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='technical', to='user.technicaluser', verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'perfil técnico',
                'verbose_name_plural': 'perfis técnicos',
            },
        ),
        migrations.CreateModel(
            name='ExecutiveProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='criado em')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modificado em')),
                ('company', models.CharField(blank=True, max_length=254, null=True, verbose_name='empresa')),
                ('role', models.CharField(max_length=254, null=True, verbose_name='cargo/Função')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='executive', to='user.executiveuser', verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'perfil executivo',
                'verbose_name_plural': 'perfis executivos',
            },
        ),
        migrations.CreateModel(
            name='AcademicProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='criado em')),
                ('updated_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modificado em')),
                ('university', models.CharField(blank=True, max_length=254, null=True, verbose_name='empresa')),
                ('role', models.CharField(max_length=254, null=True, verbose_name='cargo/Função')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='academic', to='user.academicuser', verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'perfil acadêmico',
                'verbose_name_plural': 'perfis acadêmicos',
            },
        ),
    ]
